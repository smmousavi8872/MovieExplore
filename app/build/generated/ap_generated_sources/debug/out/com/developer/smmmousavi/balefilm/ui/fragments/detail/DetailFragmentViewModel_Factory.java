// Generated by Dagger (https://google.github.io/dagger).
package com.developer.smmmousavi.balefilm.ui.fragments.detail;

import android.app.Application;
import com.developer.smmmousavi.balefilm.repository.MoviesRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class DetailFragmentViewModel_Factory implements Factory<DetailFragmentViewModel> {
  private final Provider<Application> applicationProvider;

  private final Provider<MoviesRepository> mMovieRepositoryProvider;

  public DetailFragmentViewModel_Factory(
      Provider<Application> applicationProvider,
      Provider<MoviesRepository> mMovieRepositoryProvider) {
    this.applicationProvider = applicationProvider;
    this.mMovieRepositoryProvider = mMovieRepositoryProvider;
  }

  @Override
  public DetailFragmentViewModel get() {
    DetailFragmentViewModel instance = new DetailFragmentViewModel(applicationProvider.get());
    DetailFragmentViewModel_MembersInjector.injectMMovieRepository(
        instance, mMovieRepositoryProvider.get());
    return instance;
  }

  public static DetailFragmentViewModel_Factory create(
      Provider<Application> applicationProvider,
      Provider<MoviesRepository> mMovieRepositoryProvider) {
    return new DetailFragmentViewModel_Factory(applicationProvider, mMovieRepositoryProvider);
  }

  public static DetailFragmentViewModel newInstance(Application application) {
    return new DetailFragmentViewModel(application);
  }
}
