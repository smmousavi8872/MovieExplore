// Generated by Dagger (https://google.github.io/dagger).
package com.developer.smmmousavi.balefilm.ui.fragments.detail;

import androidx.fragment.app.Fragment;
import com.developer.smmmousavi.balefilm.factory.viewmodel.ViewModelProviderFactory;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import javax.inject.Provider;

public final class DetailFragment_MembersInjector implements MembersInjector<DetailFragment> {
  private final Provider<DispatchingAndroidInjector<Fragment>> childFragmentInjectorProvider;

  private final Provider<ViewModelProviderFactory> mProviderFactoryProvider;

  public DetailFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Fragment>> childFragmentInjectorProvider,
      Provider<ViewModelProviderFactory> mProviderFactoryProvider) {
    this.childFragmentInjectorProvider = childFragmentInjectorProvider;
    this.mProviderFactoryProvider = mProviderFactoryProvider;
  }

  public static MembersInjector<DetailFragment> create(
      Provider<DispatchingAndroidInjector<Fragment>> childFragmentInjectorProvider,
      Provider<ViewModelProviderFactory> mProviderFactoryProvider) {
    return new DetailFragment_MembersInjector(
        childFragmentInjectorProvider, mProviderFactoryProvider);
  }

  @Override
  public void injectMembers(DetailFragment instance) {
    DaggerFragment_MembersInjector.injectChildFragmentInjector(
        instance, childFragmentInjectorProvider.get());
    injectMProviderFactory(instance, mProviderFactoryProvider.get());
  }

  public static void injectMProviderFactory(
      DetailFragment instance, ViewModelProviderFactory mProviderFactory) {
    instance.mProviderFactory = mProviderFactory;
  }
}
